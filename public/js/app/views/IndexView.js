// Generated by CoffeeScript 1.3.3
(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(["zepto", "backbone", "models/Model", "views/NavigationView", "views/IndexViewContent"], function($, Backbone, Model, NavigationView, IndexViewContent) {
    var IndexView;
    return IndexView = (function(_super) {

      __extends(IndexView, _super);

      function IndexView() {
        this.initialize = __bind(this.initialize, this);
        return IndexView.__super__.constructor.apply(this, arguments);
      }

      IndexView.prototype.config = {
        template: {
          titleBar: {
            actionButton: {
              title: "Next",
              href: "#next"
            },
            backButton: {
              title: "",
              href: "#"
            },
            title: "Index"
          },
          content: ""
        }
      };

      IndexView.prototype.initialize = function() {
        this.render();
        return new IndexViewContent({
          el: this.$('.content')
        });
      };

      return IndexView;

    })(NavigationView);
  });

}).call(this);
