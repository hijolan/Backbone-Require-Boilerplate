// Generated by CoffeeScript 1.3.3
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(["zepto", "backbone", "models/Model", "views/NavigationView", "views/SubViewContent"], function($, Backbone, Model, NavigationView, SubViewContent) {
    var SubView;
    return SubView = (function(_super) {

      __extends(SubView, _super);

      function SubView() {
        return SubView.__super__.constructor.apply(this, arguments);
      }

      SubView.prototype.initialize = function() {
        this.config = _.merge({}, this.config, {
          template: {
            titleBar: {
              title: "Sub",
              actionButton: {
                title: ""
              }
            }
          }
        });
        this.render();
        return new SubViewContent({
          el: this.$('.content')
        });
      };

      return SubView;

    })(NavigationView);
  });

}).call(this);
